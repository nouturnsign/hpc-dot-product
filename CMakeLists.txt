cmake_minimum_required(VERSION 3.15)
project(dot_bench CXX)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

option(ENABLE_OPENMP "Enable OpenMP parallel version" ON)
option(ENABLE_SIMD "Enable SIMD (AVX2 on x86, NEON on ARM)" ON)

add_executable(dot_bench dot_bench.cpp)

if (ENABLE_OPENMP)
    find_package(OpenMP)
    if (OpenMP_CXX_FOUND)
        message(STATUS "Found OpenMP, enabling parallel version")
        add_compile_definitions(_OPENMP)
        set(OpenMP_FLAGS "${OpenMP_CXX_FLAGS}")
    else()
        message(WARNING "OpenMP requested but not found; falling back to single-threaded")
    endif()
endif()

if (ENABLE_SIMD)
    if (CMAKE_SYSTEM_PROCESSOR MATCHES "arm64")
        message(STATUS "Enabling NEON SIMD for ARM64")
        target_compile_definitions(dot_bench PRIVATE __aarch64__)
    else()
        include(CheckCXXCompilerFlag)
        check_cxx_compiler_flag("-mavx2" COMPILER_SUPPORTS_AVX2)
        if (COMPILER_SUPPORTS_AVX2)
            message(STATUS "Enabling AVX2 SIMD")
            target_compile_options(dot_bench PRIVATE -mavx2)
        elseif(COMPILER_SUPPORTS_AVX)
            message(STATUS "Enabling AVX SIMD")
            target_compile_options(dot_bench PRIVATE -mavx)
        else()
            message(WARNING "AVX/AVX2 not supported by this compiler")
        endif()
    endif()
endif()

if (ENABLE_OPENMP AND OpenMP_CXX_FOUND)
    target_link_libraries(dot_bench PRIVATE OpenMP::OpenMP_CXX)
endif()
